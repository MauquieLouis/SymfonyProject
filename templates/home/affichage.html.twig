<!DOCTYPE html>
<html>
    <head>
    	<title>LMI :$£!@? Affichage Dynamique</title>
    	<meta charset="UTF-8">

        {% block stylesheets %}
        <link href="{{ asset('css/affichage.css') }}" rel="stylesheet" />
        {% endblock %}
    </head>
    <body>
    
    <div id="bloc">
    
    	<div id="bloc-droite">
    		<div id="logo">
    			<img class="article-img" src="{{ asset('Images/logo.jpg') }}">
    		</div>
    		
    		<div id="heure">Mardi 12 f�vrier 2018<br><p>12h00</p></div>
    		<div id="actualites">Actualit�s<br><p>Fil RSS AFP</p></div>
    		<div id="droits"><p class="center">BTS SN option IR <br> Bayle, Canal, Mauqui�</p></div>
    	
    	
    	</div>
    	
    	<div id="bloc-centre">
    		<div id="articles"><h1>Les articles</h1>
    		    <div id = "Dynamique-txt">
        		<ul id ="liste">
        		    {% for article in articles %}
        		    	{% if (article.checked)  %}
        					<li class = "list-article">{{ article.title }} : {{ article.content }}\ <img class="article-img" src="{{ asset('Images/'~article.imageFilename) }}"></li>
        		    	{% endif %}	
        		    	
        		    {% endfor %}
        	    </ul>
    		</div>
    		<div id = "Dynamique-img">
    		</div>
    	        
        		
    		</div>
    				

    		
    		<div id="calendrier"><p>Le calendrier Google Agenda</p>
    		<p>Google Calendar API Quickstart</p>

    <!--Add buttons to initiate auth sequence and sign out-->
    <button id="authorize_button" style="display: none;">Authorize</button>
    <button id="signout_button" style="display: none;">Sign Out</button>

    <pre id="content" style="white-space: pre-wrap;"></pre>

    <script type="text/javascript">
      // Client ID and API key from the Developer Console
      var CLIENT_ID = '516094392963-ls2uqh5mkl1n42itdrtjkp6fo34n5en9.apps.googleusercontent.com';
      var API_KEY = 'AIzaSyA556nQpdim8unX3vlxTnpzLA-RrAiqQGY';

      // Array of API discovery doc URLs for APIs used by the quickstart
      var DISCOVERY_DOCS = ["https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest"];

      // Authorization scopes required by the API; multiple scopes can be
      // included, separated by spaces.
      var SCOPES = "https://www.googleapis.com/auth/calendar.readonly";

      var authorizeButton = document.getElementById('authorize_button');
      var signoutButton = document.getElementById('signout_button');

      /**
       *  On load, called to load the auth2 library and API client library.
       */
      function handleClientLoad() {
        gapi.load('client:auth2', initClient);
      }

      /**
       *  Initializes the API client library and sets up sign-in state
       *  listeners.
       */
      function initClient() {
        gapi.client.init({
          apiKey: API_KEY,
          clientId: CLIENT_ID,
          discoveryDocs: DISCOVERY_DOCS,
          scope: SCOPES
        }).then(function () {
          // Listen for sign-in state changes.
          gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);

          // Handle the initial sign-in state.
          updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());
          authorizeButton.onclick = handleAuthClick;
          signoutButton.onclick = handleSignoutClick;
        }, function(error) {
          appendPre(JSON.stringify(error, null, 2));
        });
      }

      /**
       *  Called when the signed in status changes, to update the UI
       *  appropriately. After a sign-in, the API is called.
       */
      function updateSigninStatus(isSignedIn) {
        if (isSignedIn) {
          authorizeButton.style.display = 'none';
          signoutButton.style.display = 'block';
          listUpcomingEvents();
        } else {
          authorizeButton.style.display = 'block';
          signoutButton.style.display = 'none';
        }
      }

      /**
       *  Sign in the user upon button click.
       */
      function handleAuthClick(event) {
        gapi.auth2.getAuthInstance().signIn();
      }

      /**
       *  Sign out the user upon button click.
       */
      function handleSignoutClick(event) {
        gapi.auth2.getAuthInstance().signOut();
      }

      /**
       * Append a pre element to the body containing the given message
       * as its text node. Used to display the results of the API call.
       *
       * @param {string} message Text to be placed in pre element.
       */
      function appendPre(message) {
        var pre = document.getElementById('content');
        var textContent = document.createTextNode(message + '\n');
        pre.appendChild(textContent);
      }

      /**
       * Print the summary and start datetime/date of the next ten events in
       * the authorized user's calendar. If no events are found an
       * appropriate message is printed.
       */
      function listUpcomingEvents() {
        gapi.client.calendar.events.list({
          'calendarId': 'primary',
          'timeMin': (new Date()).toISOString(),
          'showDeleted': false,
          'singleEvents': true,
          'maxResults': 10,
          'orderBy': 'startTime'
        }).then(function(response) {
          var events = response.result.items;
          appendPre('Upcoming events:');

          if (events.length > 0) {
            for (i = 0; i < events.length; i++) {
              var event = events[i];
              var when = event.start.dateTime;
              if (!when) {
                when = event.start.date;
              }
              appendPre(event.summary + ' (' + when + ')')
            }
          } else {
            appendPre('No upcoming events found.');
          }
        });
      }

    </script>

    <script async defer src="https://apis.google.com/js/api.js"
      onload="this.onload=function(){};handleClientLoad()"
      onreadystatechange="if (this.readyState === 'complete') this.onload()">
    </script>
    		</div>
    	
    	</div>
    
    </div>
    
    <script type="text/javascript" src="{{ asset('js/testAffichage.js') }}"></script>
    <script>Clear(); setInterval(AffichageDyn,1500)</script>
    </body>
</html>
